ingredients = {null, 
               noodlesDried, flour, rice, chipsFrozen,
               mushroomsTinned, peppersFrozen, broccoliFrozen, peasFrozen, tomatoesTinned, potatoesFresh, beansTinned,
               cheeseFrozen, creamPowder, butterFrozen, milkPowder, eggsFresh,
               pepperoniFrozen, poultryMeatFrozen, fishFrozen, quornFrozen, porkFrozen, beefFrozen, lambFrozen,
               oil, soySauce, wine, gravyPowder};

notIngredient = null;

nothing = none;

% Costs in pennies per 100g or 100ml of ingredient.
% Frozen or tinned/dry.
% By sea (SDA from UK) or air (Twin Otter from South America or South Atlantic).
costSources = {purchase, transport, storage, cooking};
costs = [|0,0,0,0 | 
          40,0,1,0 | 10,0,1,0 | 20,0,1,0 | 17,0,2,0 |
          30,0,1,0 | 30,0,2,0 | 10,0,2,0 | 30,0,2,0 | 20,0,1,0 | 10,0,1,0 | 8,0,1,0 |
          60,0,2,0 | 40,0,1,0 | 70,0,2,0 | 89,0,1,0 | 36,0,1,0 |
          70,0,2,0 | 90,0,2,0 | 70,0,2,0 | 59,0,2,0 | 57,0,2,0 | 40,0,2,0 | 80,0,2,0 |
          13,0,1,0 | 100,0,1,0 | 80,0,1,0 | 77,0,1,0 |];

% Greenhouse gas emissions associated with 100g of igredient.
%emissionSources = {production, transport, storage, cooking};
%emissions = [];

% Grams of packaging per 100g of ingredient.
%packagingWaste = [];

% Amount of nutrients in 100g of ingredient.
% nutrients = {calories, carbohydrate, fat, fibre, protein};
nutrition = [|0,0,0,0,0 | 
              138,25,2,1,5 | 364,76,1,3,10 | 130,28,0,0,3 | 536,53,15,5,7 |
              22,3,0,1,3 | 40,9,0,4,2 | 34,7,0,3,3 | 81,14,0,5,5 | 18,4,0,1,1 | 77,17,0,2,2 | 350,63,1,16,21 |
              402,1,33,0,25 | 196,4,19,0,3 | 717,0,81,0,1 | 44,5,1,0,3 | 155,1,11,0,13 |
              494,0,44,0,23 | 239,0,14,0,27 | 206,0,12,0,22 | 99,2,2,6,14 | 242,0,14,0,27 | 250,0,15,0,26 | 294,0,21,0,25 |
              812,0,95,0,0 | 53,5,1,1,8 | 81,3,0,0,0 | 79,5,6,0,2 |];

% storage space limits in square cm.
%storageTypes = {dry, frozen};
%storageLimits = [3000, 1000];
% storage space square cm taken by 100g of ingredients.
%spaceTaken = [|0,0 | 10,0|];

meals = {vegChowMein, pepperoniPizza, chickenNoodles, mushroomSoup, kievs};

numOptions = 3; % 3 choices of meal will be served at the buffet bar.

maxIngredients = 5;
mealIngredients = 
     [|noodlesDried, mushroomsTinned, peppersFrozen, broccoliFrozen, soySauce
     |flour, cheeseFrozen, pepperoniFrozen, tomatoesTinned, mushroomsTinned
     |noodlesDried, poultryMeatFrozen, peasFrozen, soySauce, null
     |mushroomsTinned, creamPowder, null, null, null
     |poultryMeatFrozen, flour, peasFrozen, broccoliFrozen, null|];
     
maxContains = 2;     
mealContains = [|gluten, none|
                 meat, milk|
                 meat, gluten|
                 milk, none|
                 meat, none|];

% amount of ingredient in meal x 100g or 100ml.
mealIngredientsAmounts = 
    [|2, 2, 1, 1, 0|
      2, 2, 2, 2, 1|
      2, 1, 2, 0, 0|
      1, 1, 1, 0, 0|
      2, 1, 1, 1, 0|];
          
numPeople = 10;
     
% num people who do not eat categories. None means they eat everything.     
% contains = {none, meat, milk, gluten, egg, sugars};
numRefusals = [4, 3, 1, 1, 2, 0]; 

% physical workers need +50% more nutrients per day.
numPhysicalWorkers = 5;
% males need +25% more nutrients per day.
numMen = 6; 