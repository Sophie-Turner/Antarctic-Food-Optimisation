ingredients = {null, 
               oats, noodlesDried, flour, rice, pasta, chipsFrozen, hashBrownsFrozen, breadRollsFrozen,
               mushroomsTinned, peppersFrozen, broccoliFrozen, peasFrozen, tomatoesTinned, potatoesFresh, beansTinned, aubergineFresh,
                squashFrozen, carrotsFrozen,  
               cheeseFrozen, creamPowder, butterFrozen, milkPowder, oatMilk, eggsFresh, eggPowder, veganCheeseFrozen,
               baconFrozen, pepperoniFrozen, poultryMeatFrozen, fishFrozen, quornFrozen, porkFrozen, beefFrozen, lambFrozen, 
                veganSausagesFrozen, sausagesFrozen,
               oil, soySauce, wine, gravyPowder, onionPowder, spicesDried, herbsDried, stockCube,
               sugar, darkChocolate, yoghurtFrozen, veganYoghurtFrozen, custardTinned, jellyPowder, fruitMixFrozen,
                applesFresh, grapesFresh, orangesFresh, nuts, biscuits, peanutButter};

notIngredient = null;
nothing = none;

portionTypes = {grams, millilitres, millilitres_equivalent};
ingredientPortions = [grams,
                      grams, grams, grams, grams, grams, grams, grams, grams,
                      grams, grams, grams, grams, grams, grams, grams, grams,
                       grams, grams,
                      grams, millilitres_equivalent, grams, millilitres_equivalent, millilitres, grams, grams, grams,
                      grams, grams, grams, grams, grams, grams, grams, grams, 
                       grams, grams,
                      millilitres, millilitres, millilitres, millilitres_equivalent, grams, grams, grams, grams,
                      grams, grams, millilitres, millilitres, grams, grams, grams,
                       grams, grams, grams, grams, grams, grams]; 

% Costs in pennies per 100g or 100ml of ingredient.
% Frozen or tinned/dry. purchase, transport, storage.
% By sea (SDA from UK) or air (Twin Otter from South America or South Atlantic).
costs = [|0,0,0 | 
          8,9,1 | 40,9,1 | 10,9,1 | 20,9,1 | 14,9,1 | 17,9,2 | 17,9,2 | 23,9,2 |
          30,9,1 | 30,9,2 | 10,9,2 | 30,9,2 | 20,9,1 | 10,7,1 | 8,9,1 | 11,7,2 | 
           13,9,2 | 4,9,2 |
          60,9,2 | 40,9,1 | 70,9,2 | 89,9,1 | 19,9,1 | 36,7,2 | 36,9,1 | 115,9,2 |
          58,9,2 | 70,9,2 | 90,9,2 | 70,9,2 | 59,9,2 | 57,9,2 | 40,9,2 | 80,9,2 | 
           128,9,2 | 69,9,2 |
          13,9,1 | 100,7,1 | 80,7,1 | 77,9,1 | 160,9,1 | 590,9,1 | 330,9,1 | 205,9,1 |
          16,9,1 | 135,9,1 | 17,9,2 | 35,9,2 | 25,9,1 | 52,9,1 | 44,9,2 | 
           27,7,1 | 40,7,1 | 30,7,1 | 125,9,1 | 12,9,1 | 89,9,1 |];

% See calculations and assumptions document.

% kg of greenhouse gas emissions associated with 10kg of igredient. 
% 10kg because then it can be int, same magnitude as 100g cost for obj fn, and relative measure. 
% production, transport, storage.
%include the transportation from the proudction source.
emissions = [| 0,0,0 |
             7,19,1 | 18,19,1 | 7,19,1 | 15,19,1 | 18,19,1 | 20,19,2 | 20,19,2 | 6,19,2 |
             24,19,1 | 10,19,2 | 7,19,2 | 10,19,2 | 5,19,1 | 7,37,1 | 10,19,1 | 10,37,2 |
              10,19,2 | 7,19,2 | 
             97,19,2 | 44,19,1 | 76,19,2 | 14,19,1 | 5,19,1 | 33,37,2 | 33,19,1 | 22,19,2 |
             60,19,2 | 60,19,2 | 42,19,2 | 44,19,2 | 40,19,2 | 60,19,2 | 242,19,2 | 258,19,2 | 
              7,19,2 | 60,19,2 |
             16,19,1 | 22,37,1 | 12,37,1 | 28,19,1 | 28,19,1 | 28,19,1 | 28,19,1 | 28,19,1 |
             6,19,1 | 42,19,1 | 97,19,2 | 22,19,2 | 97,19,1 | 8,19,1 | 10,19,2 |
              5,37,1 | 5,37,1 | 5,37,1 | 14,19,1 | 18,19,1 | 16,19,1 |];

% Grams of packaging per 100g of ingredient.
%packagingWaste = [];

% Amount of nutrients in 100g of ingredient.
% nutrients = {calories, carbohydrate, fat, fibre, protein};
nutrition = [|0,0,0,0,0 | 
              376,30,4,4,6 | 138,25,2,1,5 | 364,76,1,3,10 | 130,28,0,0,3 | 131,25,1,1,5 | 536,53,15,5,7 | 536,53,15,5,7 | 286,57,1,2,11 |
              22,3,0,1,3 | 40,9,0,4,2 | 34,7,0,3,3 | 81,14,0,5,5 | 18,4,0,1,1 | 77,17,0,2,2 | 350,63,1,16,21 | 25,6,0,3,1 |
               38,7,0,2,1 | 41,8,0,2,1 |
              402,1,33,0,25 | 196,4,19,0,3 | 717,0,81,0,1 | 44,5,1,0,3 | 57,7,3,1,1 | 155,1,11,0,13 | 155,1,11,0,13 | 270,21,21,0,0 |
              494,0,44,0,23 | 494,0,44,0,23 | 239,0,14,0,27 | 206,0,12,0,22 | 99,2,2,6,14 | 242,0,14,0,27 | 250,0,15,0,26 | 294,0,21,0,25 |
               216,10,15,4,11 | 308,3,25,1,16 |
              812,0,95,0,0 | 53,5,1,1,8 | 81,3,0,0,0 | 79,5,6,0,2 | 40,9,0,2,1 | 40,9,0,2,0 | 22,3,0,2,0 | 271,49,5,1,8 |
              400,100,0,0,0 | 548,33,38,13,12 | 105,0,9,0,3 | 66,8,2,1,7 | 96,15,3,0,3 | 296,66,0,0,6 | 37,5,0,4,0 |
               53,12,0,2,0 | 73,17,0,2,0 | 41,8,0,2,0 | 701,3,69,6,15 | 67,2,3,0,0 | 596,12,46,9,30 |];

% storage space limits in square cm.
%storageTypes = {dry, frozen};
%storageLimits = [3000, 1000];
% storage space square cm taken by 100g of ingredients.
%spaceTaken = [|0,0 | 10,0|];

numMealsOffered = 3; % 3 choices of meal will be served at the buffet bar.

meals = {vegChowMein, pepperoniPizza, chickenNoodles, mushroomSoup, kievs, mushroomRisotto, quornLasagne, jacketSpud, marghertia, lambMoussaka, ratatouille, vegSpagBol, potatoCurry, sushi, fishPaella, beanChilli, shepherdsPie, veganSausageCasserole, mushroomOmelette, fishAndChips,
 veganPizza, quornChilli, chickenCurry, veganBangersMash, veganCanneloni, beefBurgers, roastPork, stuffedPeppers, stuffedAubergine, shakshuka, tunaPastaBake, vegHotPot, nutNoodles, eggBaconPie, squashRisotto};

% Oven and grill cost 10p for 10 mins. Hob and microwave cost 6p for 10 mins. Assume 4 portions of food fit in each.
% Most oven energy is for preheating. It doesn't increase linearly with time.
mealCookingCosts = [2, 3, 3, 4, 7, 12, 10, 12, 4, 12, 12, 3, 3, 7, 3, 12, 12, 9, 4, 5, 4, 9, 12, 5, 5, 8, 12, 12, 12, 3, 12, 12, 2, 12, 7]; 

maxIngredients = 5;
mealIngredients = 
     [|noodlesDried, mushroomsTinned, peppersFrozen, broccoliFrozen, soySauce % 100, 80, 100, 112, 24
     |flour, cheeseFrozen, pepperoniFrozen, tomatoesTinned, herbsDried % 150, 100, 100, 50, 15
     |noodlesDried, poultryMeatFrozen, peasFrozen, soySauce, oil % 56, 56, 45, 50, 75 
     |mushroomsTinned, creamPowder, oil, butterFrozen, herbsDried % 156, 31, 12, 12, 15
     |poultryMeatFrozen, flour, peasFrozen, eggPowder, butterFrozen % 174, 50, 90, 25, 40
     |rice, oil, wine, mushroomsTinned, onionPowder % 63, 15, 200, 85, 25 
     |pasta, tomatoesTinned, cheeseFrozen, quornFrozen, mushroomsTinned % 75, 92, 46, 75, 42
     |potatoesFresh, oil, beansTinned, veganCheeseFrozen, tomatoesTinned % 200, 50, 120, 15, 100 
     |flour, tomatoesTinned, cheeseFrozen, oil, herbsDried % 250, 200, 63, 31, 15
     |lambFrozen, onionPowder, tomatoesTinned, aubergineFresh, oil % 113, 28, 133, 400, 13
     |tomatoesTinned, peppersFrozen, oil, aubergineFresh, onionPowder % 400, 70, 18, 200, 85
     |pasta, quornFrozen, tomatoesTinned, herbsDried, cheeseFrozen % 75, 75, 100, 15, 25
     |potatoesFresh, spicesDried, onionPowder, peasFrozen, rice % 233, 15, 57, 33, 33 
     |rice, fishFrozen, soySauce, herbsDried, spicesDried % 188, 113, 24, 15, 15 
     |rice, fishFrozen, wine, tomatoesTinned, onionPowder % 67, 185, 29, 67, 28
     |rice, beansTinned, tomatoesTinned, onionPowder, spicesDried % 100, 200, 200, 85, 8 
     |potatoesFresh, lambFrozen, tomatoesTinned, stockCube, onionPowder % 175, 125, 100, 6, 44 
     |veganSausagesFrozen, beansTinned, onionPowder, stockCube, wine % 114, 200, 43, 6, 25    
     |eggsFresh, mushroomsTinned, herbsDried, oil, onionPowder % 200, 156, 15, 15, 85
     |fishFrozen, chipsFrozen, peasFrozen, eggPowder, oil % 150, 150, 80, 30, 3  
     |flour, veganCheeseFrozen, tomatoesTinned, mushroomsTinned, peppersFrozen % 150, 100, 50, 80, 80
     |rice, quornFrozen, beansTinned, spicesDried, tomatoesTinned % 50, 63, 200, 15, 100 
     |poultryMeatFrozen, rice, potatoesFresh, spicesDried, stockCube % 338, 100, 100, 20, 6  
     |veganSausagesFrozen, potatoesFresh, onionPowder, gravyPowder, peasFrozen % 114, 250, 85, 15, 80
     |pasta, veganCheeseFrozen, herbsDried, onionPowder, tomatoesTinned % 100, 288, 15, 43, 200
     |breadRollsFrozen, beefFrozen, cheeseFrozen, onionPowder, chipsFrozen % 100, 114, 20, 43, 284
     |porkFrozen, herbsDried, onionPowder, gravyPowder, applesFresh % 375, 15, 85, 15, 75 
     |peppersFrozen, rice, veganCheeseFrozen, herbsDried, beansTinned % 120, 50, 25, 15, 100
     |aubergineFresh, rice, wine, veganCheeseFrozen, spicesDried % 600, 50, 50, 25, 15
     |tomatoesTinned, eggsFresh, peppersFrozen, spicesDried, cheeseFrozen % 200, 100, 120, 15, 51
     |fishFrozen, broccoliFrozen, pasta, cheeseFrozen, milkPowder % 46, 63, 50, 19, 150
     |squashFrozen, carrotsFrozen, tomatoesTinned, onionPowder, stockCube % 200, 75, 100, 85, 6
     |noodlesDried, nuts, peanutButter, spicesDried, soySauce % 100, 50, 50, 5, 24
     |eggsFresh, baconFrozen, flour, butterFrozen, cheeseFrozen % 50, 67, 46, 23, 33
     |squashFrozen, wine, rice, stockCube, veganCheeseFrozen |]; % 250, 38, 100, 6, 25  
     
% amount of ingredient in meal x g or ml.
mealAmounts = 
    [|100, 80, 100, 112, 24 | 150, 100, 100, 50, 15 | 56, 56, 45, 50, 75 | 156, 31, 12, 12, 15 |
      174, 50, 90, 25, 40 | 63, 15, 200, 85, 25 | 75, 92, 46, 75, 42 | 200, 50, 120, 15, 100 |
      250, 200, 63, 31, 15 | 113, 28, 133, 400, 13 | 400, 70, 18, 200, 85 | 75, 75, 100, 15, 25 |
      233, 15, 57, 33, 33 | 188, 113, 24, 15, 15 | 67, 185, 29, 67, 28 | 100, 200, 200, 85, 8 | 
      175, 125, 100, 6, 44 | 114, 200, 43, 6, 25 | 200, 156, 15, 15, 85 | 150, 150, 80, 30, 3 |  
      150, 100, 50, 80, 80 | 50, 63, 200, 15, 100 | 338, 100, 100, 20, 6 | 114, 250, 85, 15, 80 |
      100, 288, 15, 43, 200 | 100, 114, 20, 43, 284 | 375, 15, 85, 15, 75 | 120, 50, 25, 15, 100 |
      600, 50, 50, 25, 15 | 200, 100, 120, 15, 51 | 46, 63, 50, 19, 150 | 200, 75, 100, 85, 6 |
      100, 50, 50, 5, 24 | 50, 67, 46, 23, 33 | 250, 38, 100, 6, 25 |];     
     
maxContains = 3;     
mealContains = [|gluten, egg, none| meat, milk, gluten| meat, gluten, egg| milk, none, none| meat, gluten, none|
                 none, none, none| gluten, milk, egg| none, none, none| gluten, milk, none| meat, none, none|
                 none, none, none| egg, gluten, milk| none, none, none| meat, none, none| meat, none, none|
                 none, none, none| meat, none, none| none, none, none| egg, none, none| meat, none, none|
                 gluten, none, none| egg, none, none| meat, milk, none| none, none, none| gluten, none, none|
                 gluten, meat, milk| meat, none, none| none, none, none| none, none, none| egg, milk, none|
                 meat, milk, gluten| none, none, none | gluten, nut, egg | meat, milk, gluten | none, none, none |];

% The sides can all be eaten by every diet type.
numSidesOffered = 2;              
sides = {roastPotatoes, bakedPotato, Rice, veganSausages, peas, chips, broccoli, beans, breadRolls, yorkshirePuddings, eggFriedRice, boiledEggs, porkSausages, nutRoast};                     
sideCookingCosts = [10, 12, 3, 7, 2, 7, 10, 1, 0, 3, 3, 1, 7, 10];          
sideIngredients = [| potatoesFresh, oil, herbsDried, null, null |
                     potatoesFresh, null, null, null, null | 
                     rice, null, null, null, null |
                     veganSausagesFrozen, null, null, null, null |
                     peasFrozen, null, null, null, null |
                     chipsFrozen, null, null, null, null |
                     broccoliFrozen, null, null, null, null |
                     beansTinned, null, null, null, null |
                     breadRollsFrozen, butterFrozen, null, null, null |
                     flour, oil, eggPowder, milkPowder, null |
                     rice, eggPowder, null, null, null |
                     eggsFresh, null, null, null, null |
                     sausagesFrozen, null, null, null, null |
                     nuts, peanutButter, stockCube, carrotsFrozen, oatMilk |]; 
sideAmounts = [| 200,10,5,0,0 | 200,0,0,0,0 | 100,0,0,0,0 | 75,0,0,0,0 | 80,0,0,0,0 | 284,0,0,0,0 | 45,0,0,0,0 | 120,0,0,0,0 | 100,14,0,0,0 |
                 23,6,33,33,0 | 100,50,0,0,0 | 50,0,0,0,0 | 75,0,0,0,0 | 80,13,6,25,13 |];
sideContains = [|none,none,none|none,none,none|none,none,none|none,none,none|none,none,none|none,none,none|none,none,none|
                 none,none,none|gluten,milk,none|gluten,egg,milk|egg,none,none|egg,none,none|meat,none,none|nut,none,none|];
          
numDessertsOffered = 1;
desserts = {chocolateMousse, veganFruitYoghurt, fruitSalad, walnutCake, chocolateCake, spongeCustard, jelly, cheeseBiscuits, veganPancakes, peanutCookies};
dessertCookingCosts = [1, 0, 0, 12, 12, 12, 0, 0, 1, 9]; 
dessertIngredients = [|darkChocolate, eggsFresh, sugar, oil, null| % 25, 33, 8, 17, 0
                       veganYoghurtFrozen, fruitMixFrozen, null, null, null| % 250, 50, 0, 0, 0
                       applesFresh, orangesFresh, grapesFresh, null, null| % 100, 120, 100, 0, 0
                       flour, sugar, butterFrozen, eggPowder, nuts| % 17, 33, 23, 17, 17
                       flour, sugar, butterFrozen, eggPowder, darkChocolate| % 17, 33, 23, 17, 24
                       flour, sugar, butterFrozen, eggPowder, custardTinned| % 17, 33, 23, 17, 200
                       jellyPowder, fruitMixFrozen, null, null, null| % 34, 50, 0, 0, 0
                       biscuits, cheeseFrozen, grapesFresh, null, null| % 48, 150, 100, 0, 0
                       oatMilk, flour, oil, sugar, fruitMixFrozen| % 70, 40, 5, 15, 25
                       peanutButter, eggPowder, sugar, null, null|]; % 56, 13, 25, 0, 0
                                         
dessertAmounts = [| 25, 33, 8, 17, 0 | 250, 50, 0, 0, 0 | 100, 120, 100, 0, 0 | 17, 33, 23, 17, 17 |
                    17, 33, 23, 17, 24 | 17, 33, 23, 17, 200 | 34, 50, 0, 0, 0 | 48, 150, 100, 0, 0 |
                    70, 40, 5, 15, 25 | 56, 13, 25, 0, 0 |];          
dessertContains = [| sugars, egg, none | none, none, none | none, none, none | nut, egg, sugars |
                     milk, egg, sugars | milk, egg, sugars | sugars, meat, none | milk, none, none | 
                     sugars, none, none | egg, nut, sugars |];                    
               
numBreakfastsOffered = 4;             
breakfasts = {porridge, veganPorridge, fullEnglish, veganFullEnglish, toast, yoghurt, veganYoghurt, pancakes};
breakfastCookingCosts = [3, 3, 7, 7, 1, 0, 0, 1];
breakfastIngredients = [| oats, milkPowder, fruitMixFrozen, null, null | % 50, 250, 50, 0, 0
                          oats, oatMilk, fruitMixFrozen, null, null | % 50, 250, 50, 0, 0
                          beansTinned, sausagesFrozen, baconFrozen, eggsFresh, hashBrownsFrozen | % 100, 114, 30, 100, 130
                          beansTinned, veganSausagesFrozen, hashBrownsFrozen, mushroomsTinned, tomatoesTinned | % 100, 114, 130, 78, 100
                          breadRollsFrozen, peanutButter, null, null, null | % 100, 30, 0, 0, 0
                          yoghurtFrozen, fruitMixFrozen, null, null, null | % 250, 50, 0, 0, 0
                          veganYoghurtFrozen, fruitMixFrozen, null, null, null |
                          oatMilk, flour, eggPowder, sugar, fruitMixFrozen|]; % 70, 40, 5, 15, 25
breakfastAmounts = [| 50, 250, 50, 0, 0 | 50, 250, 50, 0, 0 | 100, 114, 30, 100, 130 | 100, 114, 130, 78, 100 |
                      100, 30, 0, 0, 0 | 250, 50, 0, 0, 0 | 250, 50, 0, 0, 0 | 70, 40, 5, 15, 25 |];
breakfastContains = [| milk, none, none | none, none, none | meat, egg, none | none, none, none | 
                       gluten, nut, none | milk, none, none | none, none, none | gluten, egg, sugars |];
                 
     
